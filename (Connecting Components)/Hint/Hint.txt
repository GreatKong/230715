First, you have to find the number of connected components—C. Now, there are five cases.
C > 3: There is no solution.
C = 1: The graph is already connected, so the result is 0.
C = 3, cycles in different components: Let's say the components are A, B, and C and the cycles are in A and B. To make a graph connected, there are three ways: (A->C, B->C), (A->C, B->A) or (B->C, A->B). By (X->Y), This means to erase an edge from X that is part of a cycle and connect either of its endpoints to Y. To find an optimal way, you can iterate on edges that are part of the cycle in X, store nodes in Y in sorted order, and find the nearest node.
C = 3, cycles in the same component: Let's say the components are A, B, and C, and the cycles are in A. Say S and T are the sets of edges of two (simple) cycles, and P = S - T, Q = T - S, R = S + T. The possible way is to choose two edges, each from distinct sets (among P, Q, and R), erase them, and connect either of their vertices to B and C. So, there are basically six ways.
C = 2: The components are A and B, and the cycle is in A. You can select an edge from the cycle, erase it, and connect either of its vertices to a node in B. There is another possible way, too. Remove an edge from the cycle and join either of its endpoints to a vertex in the trees dangling from the nodes in the cycle, thus enlarging the cycle. This will give you access to more edges, which will be part of the new cycle.